{{define "api_getall.go.tmpl"}}
// GetAll{{.StructName}} is a function to get a slice of record(s) from {{.TableName}} table in the {{.DatabaseName}} database
// @Summary Get list of {{.StructName}}
// @Tags {{.StructName}}
// @Description GetAll{{.StructName}} is a handler to get a slice of record(s) from {{.TableName}} table in the {{.DatabaseName}} database
// @Accept  json
// @Produce  json
// @Param   page     query    int     false        "page requested (defaults to 0)"
// @Param   pagesize query    int     false        "number of records in a page  (defaults to 20)"
// @Param   order    query    string  false        "db sort order column"
// @Success 200 {object} {{.apiPackageName}}.PagedResults{data=[]{{.modelPackageName}}.{{.StructName}}}
// @Failure 400 {object} {{.apiPackageName}}.HTTPError
// @Failure 404 {object} {{.apiPackageName}}.HTTPError
// @Router /{{.StructName | toLower}} [get]
// http "{{$.serverScheme}}://{{$.serverHost}}{{if ne $.serverPort 80}}:{{$.serverPort}}{{end}}/{{.StructName | toLower}}?page=0&pagesize=20" X-Api-User:user123
func GetAll{{.StructName}}(c *gin.Context) {
	var code int
	req := &PagedRequest{}

	if err := c.BindQuery(&req); err != nil {
		code = util.ErrParam
		util.OutJsonErrMsg(c, code, err.Error())
		return
	}

    records, totalRows, err :=  {{.daoPackageName}}.GetAll{{.StructName}}(c, req.Page, req.PageSize, req.Order)
	if err != nil {
		code = util.ErrMySQL
		util.OutJsonErrMsg(c, code, err.Error())
		return
	}

	result := &PagedResult{Data: records, TotalRecords: totalRows}
	util.OutJson(c, code, result)
}
{{end}}
